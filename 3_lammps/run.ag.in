#----------------------------------------------------------------------------------------------
# Author        : André Guerra
# Date          : November, 2021
# Description   : 
# Notes         : 
# Updated       : July, 2022
#----------------------------------------------------------------------------------------------

# Initialization Section ----------------------------------------------------------------------

units           real
atom_style      full
# pair style dependent on water model selected
if "${wat} == tip4pice" then &
    "pair_style      lj/cut/tip4p/long 1 2 1 1 0.1577 8.5 8.5 # OM dist, coulombic cutoff"
if "${wat} == tip4p2005" then &
    "pair_style      lj/cut/tip4p/long 1 2 1 1 0.1546 8.5 8.5 # OM dist, coulombic cutoff"
pair_modify     tail yes
kspace_style    pppm/tip4p 1.0e-5
pair_modify     mix arithmetic # Lorenz – Berthelot mixing rules
neighbor        2.0 bin
neigh_modify    every 1 delay 0 check yes
bond_style      harmonic
angle_style     harmonic

# define new system or restart previous one
if "${restart_sim} == data" then & 
    "read_data ${restartFile}" &
elif "${restart_sim} == restart" & 
    "read_restart ${restartFile}" &
else &
    "read_data system.data" &
    "replicate   1 1 1"

# import molecule information depending on system simulated and water model used
if "(${gas} == water) && (${wat} == tip4pice)" then "include tip4p-ice.data"
if "(${gas} == water) && (${wat} == tip4p2005)" then "include tip4p2005.data"

# Variables Definition ------------------------------------------------------------------------

# convert from LAMMPS real units to SI
variable        atm2Pa equal 101325.0
variable        MPa2atm equal 9.86923
variable        A2m equal 1.0e-10
variable        A2tomm2 equal 1.0e-14
variable        A2tom2 equal 1.0e-20
variable        fs2s equal 1.0e-15
variable        A3_m3 equal 1.0e-30
variable        m3_cm3 equal 1.0e6
variable        Avogadro equal 6.0221412e23
variable        kCal2J equal 4184/${Avogadro}

#----------------------------------------------------------
# Test conditions
variable        Ptest equal 0.1 # MPa
variable        T equal 275   # K
#----------------------------------------------------------

# constants
variable        dim equal 3                         # dimension of simulation
variable        kB equal 1.3806504e-23              # [J/K] Boltzmann
variable        dt equal 2.0                        # femtoseconds
variable        P equal ${Ptest}*${MPa2atm}
variable        Pdamp equal 1000*${dt}              # damp ~ 1000 timesteps
variable        Tdamp equal 100*${dt}               # damp ~ 100 timesteps
variable        V equal vol                         # volume [A3]
variable        p equal 400                         # correlation length
variable        s equal 5                           # sample interval
variable        d equal $p*$s                       # dump interval
variable        H2O_MM equal 18.02                  # H2O molec weight
variable        CH4_MM equal 16.04                  # CH4 molec weight
variable        CO2_MM equal 44.01                  # CO2 molec weight
variable        H2O_molecs equal count(water)/3     # number of H2O molecs
if "${gas} == ch4" then &
    "variable        GAS_molecs equal count(methane)/5 # number of CH4 molecs"
# NOTE: 3 atoms/H2O molec; 5 atom/CH4 molec because AA model

#----------------------------------------------------------------------------------------------
# minimization protocol --
if "${restart_sim} == false" then & 
    "thermo          50" &
    "minimize        1.0e-4 1.0e-6 10000 100000 # etol ftol iter eval" &

#----------------------------------------------------------------------------------------------
# Simulation protocol --

# assign velocities randomly using a Gaussian distribution
if "${restart_sim} == false" then &
    "velocity        all create ${T} ${seed} loop geom mom yes rot yes dist gaussian"
# assign velocities randomly using a Gaussian distribution
if "${replicate} == true" then &
    "velocity        all create ${T} ${seed} loop geom mom yes rot yes dist gaussian"

# produce final coordinates file (with cmd dump) for visualization
variable        dumpFreq equal $d*5
# dump            trj all atom ${dumpFreq} traj/traj.${ensemble}.lammps
dump            trjdcd all dcd ${dumpFreq} traj/traj.${ensemble}.dcd

# make water molecule bonds rigid using share
if "${gas} == water" then &
    "fix fixshake water shake 0.0001 100 0 a 1 b 1 # eliminate vel components down bonds" &
else &
    "fix fixshake water shake 0.0001 100 0 a 2 b 2 # eliminate vel components down bonds"

variable        endstep equal step
variable        rstrtstep equal ${endstep}
reset_timestep  0
variable        ttlstep equal ${rstrtstep}+step

# select ensemble
if "${ensemble} == nve" then &
    "fix fixnve all nve # micro-canonical ensemble"
if "${ensemble} == nvt" then &
    "fix fixnvt all nvt temp $T $T ${Tdamp} # nvt ensemble - Nose-Hoover thermostat"
if "${ensemble} == npt" then &
    "fix fixnpt all npt temp $T $T ${Tdamp} iso $P $P ${Pdamp} drag 20.0 # npt ensemble"

#----------------------------------------------------------------------------------------------
# average property calculations
variable        H2O_mass equal ${H2O_molecs}*(${H2O_MM}/${Avogadro})
if "${gas} == ch4" then &
    "variable        GAS_mass equal ${GAS_molecs}*(${CH4_MM}/${Avogadro})" &
    "variable        rho equal (${H2O_mass}+${GAS_mass})/(vol*${A3_m3}*${m3_cm3})" &
elif "(${gas} == epm2) || (${gas} == trappe) || (${gas} == zhang)" &
    "variable        GAS_mass equal ${GAS_molecs}*(${CO2_MM}/${Avogadro})" &
    "variable        rho equal (${H2O_mass}+${GAS_mass})/(vol*${A3_m3}*${m3_cm3})" &
else &
    "variable        rho equal ${H2O_mass}/(vol*${A3_m3}*${m3_cm3})"
fix             rhoAve all ave/time $s $p $d v_rho &
                file ./fix/density.txt

compute         T all temp
fix             tempAve all ave/time $s $p $d c_T

variable        P equal press
fix             pressAve all ave/time $s $p $d v_P

compute         PE all pe pair kspace
if "${gas} == water" then &
    "variable        PEmol equal c_PE/${H2O_molecs}" &
else &
    "variable        PEmol equal c_PE/(${H2O_molecs}+${GAS_molecs})"
fix             avePEmol all ave/time $s $p $d v_PEmol

variable        initStep equal step
variable        fracDone equal (step-${initStep})/${steps}
variable        ttlFracDone equal v_ttlstep/(${steps}+${rstrtstep})

# setting restart frequency
restart         ${restart_freq} ./restart/restart_${ensemble}_*step.data

timestep        ${dt}   # 2.0 fs
thermo_style    custom step v_fracDone v_ttlstep v_ttlFracDone temp f_tempAve press f_pressAve &
                vol density v_rho f_rhoAve pe v_PEmol f_avePEmol ke etotal 
# thermo_style    custom step v_fracDone v_ttlstep v_ttlFracDone temp press &
#                 vol density pe ke etotal 


thermo_modify   flush yes # no buffer; output to file is online
thermo          $d # 2000 fs; must be the same as fix calculation intervals

# run
run             ${steps} # timesteps

# write system end state
write_data      ./data/systemEnd_${ensemble}_*step.data

# output a restart file
write_restart   ./restart/restartEnd_${ensemble}_*step.data

# End -----------------------------------------------------------------------------------------
